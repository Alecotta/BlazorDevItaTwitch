<!-- 
Il Bind value implica 3 proprietà:
1- Value: dice quale è il valore
2- Value Changed: callback che scatta quando il valore cambia
3- Value Expression: expression su una function che restituisce una stringa. Lambda expression che permette di ritornare un valore.
   (ciò che accade nel validation message)

Questi 3 vanno a sotituire il bind-value.
Il bind value sostituisce la funzione di questi comandi.
-->

<div class="form-group">
    <label for="@Id">@Label</label>
    <InputNumber id="@Id" class="form-control"
        TValue="int"
        Value="@Value"
        ValueChanged="@ValueChanged"
        ValueExpression="@ValueExpression"
        />
    <ValidationMessage For="@ValueExpression" />
</div>

@code {
    [Parameter] public string? Id { get; set; }
    [Parameter] public string? Label { get; set; }
    [Parameter] public int Value { get; set; }
    [Parameter] public EventCallback<int> ValueChanged { get; set; }
    [Parameter] public Expression<Func<int>>? ValueExpression { get; set; }

    protected override void OnParametersSet()
    {
        if (string.IsNullOrEmpty(Id))
        {
            Id = Guid.NewGuid().ToString();
        }
    }
}
