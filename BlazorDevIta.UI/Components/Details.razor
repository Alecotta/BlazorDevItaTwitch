<h3>Details @CurrentItem?.Summary</h3>

<EditForm Model="CurrentItem" OnValidSubmit="@(() => OnSave.InvokeAsync(CurrentItem))"> 
    <DataAnnotationsValidator />

    <div class="form-group">
        <label>Summary</label>
        <InputText class="form-control" @bind-Value="CurrentItem!.Summary" />
        <ValidationMessage For="@(() => CurrentItem.Summary)" />
    </div>

    <div class="form-group">
        <label>Date</label>
        <InputDate class="form-control" @bind-Value="CurrentItem!.Date" />
        <ValidationMessage For="@(() => CurrentItem.Date)" />
    </div>

    <div class="form-group">
        <label>Temperature C</label>
        <InputNumber class="form-control" @bind-Value="CurrentItem!.TemperatureC" />
        <ValidationMessage For="@(() => CurrentItem.TemperatureC)" />
    </div>

    <button type="button" class="btn btn-default" @onclick="OnCancel">Cancel</button>
    <button type="submit" class="btn btn-primary">Save</button>
</EditForm>

@code {
    [Parameter]
    public WeatherForecast? CurrentItem { get; set; }

    [Parameter]
    public EventCallback OnCancel { get; set; }

    [Parameter]
    public EventCallback<WeatherForecast> OnSave { get; set; }

}
