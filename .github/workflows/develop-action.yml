# This is a basic workflow to help you get started with Actions

name: build and pack nuget on Github

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "develop" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Checkout
        uses: actions/checkout@v3
        
      # Tool che serve per versionare i pacchetti 
      - name: Install Git Version
        uses: gittools/actions/gitversion/setup@v0.9.7
        with:
          versionSpec: "5.x"
      
      # Determinata la versione del pacchetto
      - name: Determine Version
        id: gitversion
        uses: gittools/actions/gitversion/execute@v0.9.7
      
      - name: Setup .NET Core
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: "6.0.x"
          include-prerelease: true
          
      - name: Build with dotnet
        run: dotnet build ./BlazorDevIta.UI/BlazorDevIta.UI.csproj --configuration Release

      - name: Test with dotnet
        run: dotnet test
      
      # Creato il pacchetto con la versione corretta
      - name: Create Pack
        run: dotnet pack ./BlazorDevIta.UI/BlazorDevIta.UI.csproj --configuration Release -p:Version=${{ steps.gitversion.outputs.SemVer }}
        
      - name: Publish
        run: |
          # Secret generato dalla action. Utilizzando i secrets, vengono centralizzati i controlli sulla sicurezza. 
          dotnet nuget add source --username USERNAME --password ${{ secrets.GITHUB_TOKEN }} --store-password-in-clear-text --name github "https://nuget.pkg.github.com/${{ github.repository_owner }}/index.json"
          dotnet nuget push **\*.nupkg --source github --api-key ${{ secrets.GITHUB_TOKEN }}          
